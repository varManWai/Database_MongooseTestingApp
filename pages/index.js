import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import connectMongo from "../utils/connectMongo";
import Student from "../models/student";
import { useRouter } from "next/router";
import { useState } from "react";

export default function Home({ Students }) {
  const router = useRouter();

  const [name, setName] = useState('');
  const [email, setEmail] = useState('');

  const createStudent = async () => {
    const randomNum = Math.floor(Math.random() * 1000);
    const res = await fetch("/api/test/add", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        name: name,
        email: email,
      }),
    });
    const data = await res.json();
    console.log(data);

    router.push("/");
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <form onSubmit={createStudent}>
          <label>Name :</label>
          <input type="text" value={name} onChange={(event) => setName(event.target.value)} />
          <label>Email :</label>
          <input type="text" value={email} onChange={(event) => setEmail(event.target.value)} />
          <button type="submit">Submit</button>
        </form>

        <button onClick={createStudent}>Create Student</button>


        <div className={styles.grid}>
          <div className={styles.grid}>
            {Students.map((Student) => (
              <a
                href="https://nextjs.org/docs"
                key={Student._id}
                className={styles.card}
              >
                <h2>{Student.name} &rarr;</h2>
                <p>{Student.email}</p>
              </a>
            ))}
          </div>
        </div>
      </main>


    </div>
  );
}

export const getServerSideProps = async () => {
  try {
    console.log("CONNECTING TO MONGO");
    await connectMongo();
    console.log("CONNECTED TO MONGO");

    console.log("FETCHING DOCUMENTS");
    const Students = await Student.find();
    console.log("FETCHED DOCUMENTS");

    return {
      props: {
        Students: JSON.parse(JSON.stringify(Students)),
      },
    };
  } catch (error) {
    console.log(error);
    return {
      notFound: true,
    };
  }
};
